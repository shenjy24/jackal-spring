<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="userBean" class="com.jonas.bean.User" init-method="init">
        <property name="userId" value="1"/>
        <property name="userName" value="Jonas"/>
        <property name="birthDate" value="1990-10-10"/>
    </bean>

    <!-- 自定义FactoryBean实现自定义bean加载逻辑 -->
    <bean id="customUserBean" class="com.jonas.feature.factorybean.UserFactoryBean">
        <property name="userInfo" value="2,Tom,1990-10-10"/>
    </bean>

    <!-- 自定义属性编辑器 与propertyEditorRegistrars二选一 -->
    <bean id="customEditors" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="java.util.Date" value="com.jonas.feature.property.DatePropertyEditor"/>
            </map>
        </property>
    </bean>

    <!-- 自定义Spring自带编辑器 -->
    <bean id="propertyEditorRegistrars" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="propertyEditorRegistrars">
            <list>
                <bean class="com.jonas.feature.property.DatePropertyEditorRegistrar"/>
            </list>
        </property>
    </bean>

    <!-- 自定义BeanFactoryPostProcessor -->
    <bean id="userBeanFactoryPostProcessor"
          class="com.jonas.feature.beanfactorypostprocessor.UserBeanFactoryPostProcessor"/>

    <!-- 自定义BeanPostProcessor -->
    <bean id="userBeanPostProcessor" class="com.jonas.feature.beanpostprocessor.UserBeanPostProcessor"/>

    <!-- 自定义类型转换器 -->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean id="string2DateConverter" class="com.jonas.feature.property.String2DateConverter"/>
            </set>
        </property>
    </bean>

    <!-- 启用AOP -->
    <aop:aspectj-autoproxy/>
    <bean id="userAspectJ" class="com.jonas.feature.aop.UserAspectJ"/>

    <!-- 启用事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- MySQL数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/jackal-db"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
        <!-- 连接池启动时的初始值 -->
        <property name="initialSize" value="1"/>
        <!-- 连接池的最大值 -->
        <property name="maxActive" value="300"/>
        <!-- 最大空闲值，当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接释放一部分，一直减到maxIdle为止 -->
        <property name="maxIdle" value="2"/>
        <!-- 最小空闲值，当空闲的连接数少于阈值时，连接池就会预申请一些连接，以免洪峰来时来不及申请 -->
        <property name="minIdle" value="1"/>
    </bean>
    <!-- 配置业务bean -->
    <bean id="playerService" class="com.jonas.feature.transaction.service.impl.PlayerServiceImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>
</beans>